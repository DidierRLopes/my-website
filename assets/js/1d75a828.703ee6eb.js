"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9425],{764:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/2021-06-12-customizable-meme-filter_2-cc7395edac92f82ea904bf93c204ad97.png"},8343:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/2021-06-12-customizable-meme-filter_1-53b8a9f9fbf89d82e94bdbc8e8d93f98.png"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var o=n(96540);const i={},s=o.createContext(i);function a(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:t},e.children)}},53028:e=>{e.exports=JSON.parse('{"permalink":"/blog/customizable-meme-filter","editUrl":"https://github.com/DidierRLopes/my-website/tree/main/blog/2021-06-12-customizable-meme-filter.md","source":"@site/blog/2021-06-12-customizable-meme-filter.md","title":"Customizable Meme Filter","description":"In this blogpost, I share my journey of creating a customizable meme filter using Python. This filter selects a random meme based on the number of people on the screen and assigns each person to a character in the meme.","date":"2021-06-12T00:00:00.000Z","tags":[{"inline":true,"label":"Python","permalink":"/blog/tags/python"},{"inline":true,"label":"Meme Filter","permalink":"/blog/tags/meme-filter"},{"inline":true,"label":"Image Processing","permalink":"/blog/tags/image-processing"},{"inline":true,"label":"Face Recognition","permalink":"/blog/tags/face-recognition"}],"readingTime":2.74,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"customizable-meme-filter","title":"Customizable Meme Filter","date":"2021-06-12T00:00:00.000Z","image":"/blog/2021-06-12-customizable-meme-filter.png","tags":["Python","Meme Filter","Image Processing","Face Recognition"],"description":"In this blogpost, I share my journey of creating a customizable meme filter using Python. This filter selects a random meme based on the number of people on the screen and assigns each person to a character in the meme."},"unlisted":false,"prevItem":{"title":"My journey of memorising a deck of 52 shuffled cards","permalink":"/blog/my-journey-of-memorising-a-deck-of-52-shuffled-cards"},"nextItem":{"title":"NeistPoint Project","permalink":"/blog/neistpoint-project"}}')},95941:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>m});var o=n(53028),i=n(74848),s=n(28453);const a={slug:"customizable-meme-filter",title:"Customizable Meme Filter",date:new Date("2021-06-12T00:00:00.000Z"),image:"/blog/2021-06-12-customizable-meme-filter.png",tags:["Python","Meme Filter","Image Processing","Face Recognition"],description:"In this blogpost, I share my journey of creating a customizable meme filter using Python. This filter selects a random meme based on the number of people on the screen and assigns each person to a character in the meme."},r=void 0,l={authorsImageUrls:[]},m=[];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("p",{align:"center",children:(0,i.jsx)("img",{width:"600",src:"/blog/2021-06-12-customizable-meme-filter.png"})}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(t.p,{children:"In this blogpost, I share my journey of creating a customizable meme filter using Python. This filter selects a random meme based on the number of people on the screen and assigns each person to a character in the meme."}),"\n",(0,i.jsxs)(t.p,{children:["The open source code is available ",(0,i.jsx)(t.a,{href:"https://github.com/DidierRLopes/meme-filter",children:"here"}),"."]}),"\n",(0,i.jsx)("div",{style:{borderTop:"1px solid #0088CC",margin:"1.5em 0"}}),"\n",(0,i.jsxs)(t.p,{children:["For the people who know me, they know how much I enjoy memes. I\u2019ve got to admit, whenever I go to museums I have a lot of fun captioning artwork as memes. ",(0,i.jsx)(t.strong,{children:"As I like to say, I go for the art, and I stay for the memes."})]}),"\n",(0,i.jsxs)(t.p,{children:["One day while commuting to work (you can still see the ",(0,i.jsx)(t.a,{href:"https://github.com/DidierRLopes/meme-filter/commit/59be427571c96350d9652922b3ab2ba52ddf18af",children:"first commit"})," which dates back to 10 February of 2020 and has only notes of the sketch of this idea in Portuguese) I thought:"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"\u201cIt would be funny if there was a snapchat kind of filter where given the number of people on the screen, a random meme was selected and each person would be one of its characters\u201d."}),"\n"]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(t.p,{children:["Since I was still improving my Python skills, I thought why not do it in Python. After 1 month, I already had the working code, however, since I was switching jobs at the time my commute time reduced drastically and so did my time to work on this. It took around 1 more month to finish the cleaning up of the script (324 lines) to be more readable, and at the same time Covid happened. ",(0,i.jsx)(t.strong,{children:"The latter explains why my hair is blonde on the demo below"})," :)"]}),"\n",(0,i.jsx)(t.p,{children:"Usage:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-console",children:"./didifilter.py \u2014 location=memes \u2014 caption=\u2019Which meme am I?\u2019 \u2014 initial=30 \u2014 final=50 -b \u2014 max=3\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"hair_1",src:n(8343).A+"",width:"1280",height:"720"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"To sum up:"})," This program is meant to be an advanced version of the known snapchat filter where there are random images spinning on top of people\u2019s heads. The main improvement is that you can not only select the images you want to choose from and the caption, but you can also play it with friends (recognizing more than 1 face at the same time)."]}),"\n",(0,i.jsx)(t.p,{children:"The best part of the script is that it is meant to be easily customizable. Any person is able to create their own filter by creating a folder with the images they want within a folder with 1, 2, \u2026 based on the number of people they are meant to be used (apart from when backwardCompatible flag is enabled), and select/specify different types of flags/parameters, e.g.:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-console",children:"./didifilter.py \u2014 locationFolder=celebrities \u2014 caption=\u2019What celeb am I?\u2019 \u2014 max=2 -v \u2014 video=\u201dexampleVideo\u201d\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-console",children:'./didifilter.py --locationFolder=pokemons --caption="Who\'s this pokemon?" --width=250 --height=150 --max=1 -p\n'})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"AND"}),", you can also quickly tweak the code to adapt it to do something else. Here\u2019s me ",(0,i.jsx)(t.strong,{children:"pranking"})," my girlfriend with a psyduck when the query was: \u201c",(0,i.jsx)(t.em,{children:"Who do I look like?"}),"\u201d"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"hair_2",src:n(764).A+"",width:"1280",height:"720"})}),"\n",(0,i.jsxs)(t.p,{children:["Hope you have a nice read and enjoy the filter. You can find the code ",(0,i.jsx)(t.a,{href:"https://github.com/DidierRLopes/meme-filter",children:"here"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Feel free to provide feedback, as always!"})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);