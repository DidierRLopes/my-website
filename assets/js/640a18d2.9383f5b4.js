"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5838],{39430:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=i(85893),r=i(3905);const a={slug:"time-series-crossvalidation-for-nn",title:"Time-Series CrossValidation for NN",date:new Date("2021-09-04T00:00:00.000Z"),image:"/blog/2021-09-04-time-series-crossvalidation-for-nn.png",tags:["Python","Data Science","Deep Learning","Time Series","Cross Validation","Neural Networks"],description:"This blog post discusses the creation of a Python module for splitting univariate time-series data using cross-validation techniques. The module is designed to prepare data for training, validation, and testing in a Deep Neural Network (DNN)."},o=void 0,s={permalink:"/blog/time-series-crossvalidation-for-nn",editUrl:"https://github.com/DidierRLopes/my-website/tree/main/blog/2021-09-04-time-series-crossvalidation-for-nn.md",source:"@site/blog/2021-09-04-time-series-crossvalidation-for-nn.md",title:"Time-Series CrossValidation for NN",description:"This blog post discusses the creation of a Python module for splitting univariate time-series data using cross-validation techniques. The module is designed to prepare data for training, validation, and testing in a Deep Neural Network (DNN).",date:"2021-09-04T00:00:00.000Z",tags:[{inline:!0,label:"Python",permalink:"/blog/tags/python"},{inline:!0,label:"Data Science",permalink:"/blog/tags/data-science"},{inline:!0,label:"Deep Learning",permalink:"/blog/tags/deep-learning"},{inline:!0,label:"Time Series",permalink:"/blog/tags/time-series"},{inline:!0,label:"Cross Validation",permalink:"/blog/tags/cross-validation"},{inline:!0,label:"Neural Networks",permalink:"/blog/tags/neural-networks"}],readingTime:2.66,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"time-series-crossvalidation-for-nn",title:"Time-Series CrossValidation for NN",date:"2021-09-04T00:00:00.000Z",image:"/blog/2021-09-04-time-series-crossvalidation-for-nn.png",tags:["Python","Data Science","Deep Learning","Time Series","Cross Validation","Neural Networks"],description:"This blog post discusses the creation of a Python module for splitting univariate time-series data using cross-validation techniques. The module is designed to prepare data for training, validation, and testing in a Deep Neural Network (DNN)."},unlisted:!1,prevItem:{title:"Gamestonk Terminal \u2014 Can\u2019t Stop, Won\u2019t Stop",permalink:"/blog/gamestonk-terminal-cant-stop-won-t-stop"},nextItem:{title:"Ranking 99 Mind f*ck movies",permalink:"/blog/ranking-99-mind-f-ck-movies"}},l={authorsImageUrls:[]},c=[];function d(e){const t={a:"a",p:"p",...(0,r.ah)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("p",{align:"center",children:(0,n.jsx)("img",{width:"600",src:"/blog/2021-09-04-time-series-crossvalidation-for-nn.png"})}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.p,{children:"This blog post discusses the creation of a Python module for splitting univariate time-series data using cross-validation techniques. The module is designed to prepare data for training, validation, and testing in a Deep Neural Network (DNN)."}),"\n",(0,n.jsxs)(t.p,{children:["The open source code is available ",(0,n.jsx)(t.a,{href:"https://github.com/DidierRLopes/timeseries-cv",children:"here"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,r.ah)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3905:(e,t,i)=>{i.d(t,{ah:()=>c});var n=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(i),g=r,m=u["".concat(l,".").concat(g)]||u[g]||d[g]||a;return i?n.createElement(m,o(o({ref:t},p),{},{components:i})):n.createElement(m,o({ref:t},p))}));p.displayName="MDXCreateElement"}}]);