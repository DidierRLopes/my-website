"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[51868],{28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>s});var o=i(96540);const n={},r=o.createContext(n);function a(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(r.Provider,{value:t},e.children)}},29163:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025-07-23-can-we-kill-the-term-vibe-coding","editUrl":"https://github.com/DidierRLopes/my-website/tree/main/blog/2025-07-23-can-we-kill-the-term-vibe-coding.md","source":"@site/blog/2025-07-23-can-we-kill-the-term-vibe-coding.md","title":"Can we kill the term \\"vibe coding\\"?","description":"The term \'vibe coding\' undermines the strategic work of delegating tasks to AI. This post argues for a shift in perspective towards \'outcome-driven development\' as a more accurate description of the future of software engineering.","date":"2025-07-23T00:00:00.000Z","tags":[{"inline":true,"label":"ai","permalink":"/blog/tags/ai"},{"inline":true,"label":"software-development","permalink":"/blog/tags/software-development"},{"inline":true,"label":"future-of-code","permalink":"/blog/tags/future-of-code"},{"inline":true,"label":"developer-productivity","permalink":"/blog/tags/developer-productivity"},{"inline":true,"label":"llms","permalink":"/blog/tags/llms"},{"inline":true,"label":"engineering-philosophy","permalink":"/blog/tags/engineering-philosophy"},{"inline":true,"label":"vibe-coding","permalink":"/blog/tags/vibe-coding"}],"readingTime":3.07,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"2025-07-23-can-we-kill-the-term-vibe-coding","title":"Can we kill the term \\"vibe coding\\"?","date":"2025-07-23T00:00:00.000Z","image":"/blog/2025-07-23-can-we-kill-the-term-vibe-coding","tags":["ai","software-development","future-of-code","developer-productivity","llms","engineering-philosophy","vibe-coding"],"description":"The term \'vibe coding\' undermines the strategic work of delegating tasks to AI. This post argues for a shift in perspective towards \'outcome-driven development\' as a more accurate description of the future of software engineering.","hideSidebar":true,"hide":true},"unlisted":false,"prevItem":{"title":"We don\'t own data. But empower those who do or those who have it","permalink":"/blog/2025-07-30-we-dont-own-data-but-empower-those-who-do-or-those-who-have-it"},"nextItem":{"title":"Is Prompt Engineering dead? The case for Test-Driven AI Development","permalink":"/blog/2025-07-17-is-prompt-engineering-dead-the-case-for-test-driven-ai-development"}}')},93675:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var o=i(29163),n=i(74848),r=i(28453);const a={slug:"2025-07-23-can-we-kill-the-term-vibe-coding",title:'Can we kill the term "vibe coding"?',date:new Date("2025-07-23T00:00:00.000Z"),image:"/blog/2025-07-23-can-we-kill-the-term-vibe-coding",tags:["ai","software-development","future-of-code","developer-productivity","llms","engineering-philosophy","vibe-coding"],description:"The term 'vibe coding' undermines the strategic work of delegating tasks to AI. This post argues for a shift in perspective towards 'outcome-driven development' as a more accurate description of the future of software engineering.",hideSidebar:!0,hide:!0},s=void 0,l={authorsImageUrls:[]},d=[];function c(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("p",{align:"center",children:(0,n.jsx)("img",{width:"600",src:"/blog/2025-07-23-can-we-kill-the-term-vibe-coding.png"})}),"\n",(0,n.jsx)(t.p,{children:"The term 'vibe coding' undermines the strategic work of delegating tasks to AI. This post argues for a shift in perspective towards 'outcome-driven development' as a more accurate description of the future of software engineering."})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);